name: CICD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Ensure workspace directory exists
      run: mkdir -p /home/ubuntu/actions-runner/_work/Boardgame/Boardgame

    - name: Clean up the workspace directory
      run: |
        sudo rm -rf /home/ubuntu/actions-runner/_work/Boardgame/Boardgame/*

    - name: Configure Git safe directory
      run: git config --global --add safe.directory /home/ubuntu/actions-runner/_work/Boardgame/Boardgame

    - uses: actions/checkout@v4
      with:
        clean: false

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn package --file pom.xml

    - uses: actions/upload-artifact@v4
      with:
        name: Boardgame
        path: target/*.jar

    - name: Trivy FS Scan
      run: |
        trivy fs --format table -o trivy-fs-report.html .

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: SonarQube Quality Gate Check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v3.2.0

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.6.1

    - name: Build Docker image
      run: |
        docker build -t devopssahil/boardgame:latest .

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: docker push devopssahil/boardgame:latest

    - name: Kubectl Action
      uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}

    - name: Print working directory
      run: pwd

    - name: List files in the working directory
      run: ls -la

    - name: Apply Kubernetes configuration
      run: |
        kubectl apply -f deployment-service.yaml -n webapps
        kubectl get svc -n webapps
